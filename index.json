[{"categories":null,"contents":"Addressed pretty significant page load performance issue founde in larger deployments. Eliminates uses of intensive backend query, replacing it with an asynchronous API call against a lucene index. This change reduces page load from from 2+ minutes to nearly instant, with an incredibly responsive UI.\n","permalink":"/projects/contributions/deploy-triggers/","tags":["Java","jQuery","REST APIs","Bamboo","JSON"],"title":"Atlassian Deployment Triggers"},{"categories":null,"contents":" SLO 1, SLO 4 + GROUP REFLECTION A summer studio takes place approximately a month before the usual Autumn university session, utilizing a condensed teaching format of 4 weeks instead of a usual university semester. Out of the many choices to select from, I chose Cybersecurity: An Offensive Mindset as my 6-credit summer course as my personal aim was to find an internship immediately after the holidays.\nOn the first day (4/02/2019) we were assigned to present upon a Cybersecurity topic of our own choice in groups of 4 to 5. The task was due on Wednesday (in two days), so I got to work immediately with picking out a group. The team I decided to join was composed of a mixed skillset, with the veterans being Jason, Andre and I as we were involved in the UTS Cybersec society beforehand. However, the new members: Frank and Vishal were both hard working software engineering students in their final year. The group selection gave us a perfect opportunity to practice our interpersonal, leadership and communication skills.\n^ SLO 1 Artefact 1: We decided to use Microsoft Teams as a form of communication.\nI strongly believe in the importance of team communication, so we used one of my preferred tools, Microsoft Teams to act as our project planner. After we dissected the project into 4 steps, we used google slides to complete our presentation slides. Of course, there was initial friction within the team when we were trying to decide upon the topic, but after a couple of rounds of voting we decided to research bug bounty and isolated steam as our technical case study.\n^ SLO 4 Artefact 1: Our team presenting at the front.\nSo, what have we achieved?\nThe topic we chose to present is the bug bounty program, where you “get paid to hack things”. A bug bounty is a program which crowdsources bug hunting for target software products and services which rewards hackers reporting these bugs with money and recognition.\nWe then delved into a case where valve pays 15000 pounds to a hacker who found a steam bug that generates free games. Artem, who was the hacker, passed in specific URL parameters that gave him access to API endpoint calls to get multiple game Product keys.\nOverall the presentation went extremely smoothly and gave us an important insight of teamwork, and provided the students with a fresh way to learn from each other. Thus SLO 1 was fulfilled as a group when we where trying to identify a Cyber Security problem, while SLO 4 was explored during our presentation and its completion process.\nHere is our presentation slides: https://docs.google.com/presentation/d/1e3WunCcSdGv09VA77-9W8lBUlbU3uerzyue-1ow_glc/edit?usp=sharing\nSLO 2, SLO 3 The most difficult task given to us in week 1 was to create our own Static website to host weekly reflections, submissions and ultimately post our portfolio which is due in week 4.\nWe were given the following intro:\n• Dynamic sites require the use of server-side scripting that increases the possibilities of vulnerabilities and attacks. Whilst dynamic sites are required for many web applications, static sites are gaining popularity for their simplicity and for their increased security\n• Static sites are presented using plain HTML with no server-side scripting required. This usually requires the use of a static site generator that is able to take input files written in mark-up (e.g. Markdown)\nIn all honesty, other than a blog which I created using Blogger, I had no experience in creating a static website. Thus, after conducting my personal research, I first started with Jekyll to generate a site using an existing theme. However, I ran into many troubles with server hosting, so I decided to skip the static generation component and started with a template found on startBootstrap.com. After consulting with a senior software student(Vishal) who was familiar with front-end development, I was taught the Git process on the Friday afternoon.\n^ SLO 3 Artefact 1: The succeeded Git push onto my master branch.\nI started off learning the utilisation of GitHub-Pages, and through trial and error, I linked GitHub with GitKraken, a Git Client widely used in the development industry. Saturday was dedicated to the addition of all the content on this website and learning HTML on the go. It was quite the challenge as the only language I learnt during my first year was Java, but I viewed this as an opportunity to learn a new skill and further advance myself outside of my comfort zone.\n^ SLO 2 Artefact 1: The HTML code I used in this website.\nThe creation of the static website further reinforced the notion of combining technical skills outlined in SLO 3 with the creative adaption outlined in SLO 2 to overcome obstacles such as the problematic server.\nSLO 5 + SUBJECT REFLECTION The teaching staff was extremely supportive as they conducted their teaching. Larry was very direct and concise when disclosing information, while the Microsoft Team class group was also a great addition to aid our communication when we wanted to voice our questions. Darsh is very supportive in the communication side as he answered all my questions about the presentation task and gave our ideas great feedback.\n^ SLO 5 Artifact 1: Darsh responding to my question on Teams.\nAnother feedback session was held between Larry and each student after the presentation, which encompassed our personal progress in the subject. Thus, from undertaking the first week of this subject I am already optimistic that this subject will cover all my expectations and aims outlined at the start.\n","permalink":"/publications/week-1/","tags":null,"title":"WEEK 1: SPRINT 1"},{"categories":null,"contents":" ETHICAL HACKING AND BUG BOUNTIES Ethical hacking is a controlled method to find out the weaknesses and vulnerabilities existing in a system or network. In the current technology- centric society, no business is without the use of IT, but such dependency comes at a cost without proper security countermeasures. Mr. Agarwal from TechnoSip Inc summed it up quite well, “Essentially, they\u0026rsquo;re the gatekeepers for the organization, in order to prevent an unethical hacker from inflicting any damage.” (Forbes.com, 2019) Current trends of rewarding bug bounties and hiring penetration testing services allows a company to receive vital feedback on its defensive capabilities.\nA responsible disclosure policy is the first step a company can take to protect itself from a premature vulnerability release to the public. The responsible disclosure is different from a full disclosure model as there is a time frame for the issue to be patched before it is disclosed to the public. The following is an example:\n^An example of responsible disclosure policy for the ficticious company ACME corporation.\nDuring sprint 1, our group completed our presentation on bug bounty programs, with bug crowd being the main site of research. This week I aim to test web applications under a responsible disclosure from Bug Crowd using the techniques I gained from participating in Pentesterlabs. The target scope with additional details is provided after a program is selected, program such as Netflix and Stan both possess relevant responsible disclosure policy tagged in their web application programs.\n^ ^Bug Bounty program by Netflix on Bugcrowd.\nBibliography: Forbes.com. (2019). Ethics And Hacking: What You Need To Know. [online] Available at: https://www.forbes.com/sites/forbestechcouncil/2017/03/06/ethics-and-hacking-what-you-need-to-know/#7e3f2d9266d5 [Accessed 12 Feb. 2019].\n","permalink":"/publications/week-2/","tags":null,"title":"WEEK 2: SPRINT 2"},{"categories":null,"contents":"My name is Andy Lee. I’m pursuing a Bachelor of Engineering (Honours) with Diploma in Professional Engineering Practice, majoring in Software and undertaking my 2nd year at UTS. I am quite passionate about cybersecurity and aspire to be a Cyber Security Engineer with focus in incident response (Blue Team). I love problem solving and learning new skillsets, so I dedicated most of my first-year to the UTS Cyber Security Society as an opportunity to learn and gain exposure to the industry. Throughout my studies so far, UTS has provided plenty of software and project- based subjects, however from the day I joined the UTS Cyber Sec, I have always looked for an accredited course that enabled more hands- on work in penetration testing. Thus, when Larry who is the head educator of this summer studio gave me an outline, I immediately jumped on board.\nI have personally been involved in the Cyber Security Challenge Australia (CYSCA) 2018, placing first in the First-year division as the team strategist I hope to cover the offensive side of Cyber Security through this summer studio, Cyber Security: An Offensive Mindset. My personal goal for this module:\n Understand tools and techniques from OWASP top 10 to relate to vulnerable web applications. Gain a better understanding of the Cyber Security Sector in general.  There are 5 major subject learning outcomes with this course and the achievement of these outcomes will be outlined by this portfolio. The SLO’s are:\n Engage with Stakeholders to identify a problem (empathizing/ defining the problem) Apply Design Thinking to respond to a defined or newly identified problem Apply Technical skills to develop, model and/or evaluate design (refining/ test a prototype) Demonstrate effective collaboration and communication Conduct critical self and peer review and performance evaluation (both as an individual and a team)  ","permalink":"/publications/about-me/","tags":null,"title":"SUMMERSTUDIO- CYBER SECURITY: AN OFFENSIVE MINDSET"},{"categories":null,"contents":"Shields.io is a massive library of badges that can be inserted into project README\u0026rsquo;s or websites displaying various statuses (code coverage, health, version, etc). Support for docker was missing the current build health, and was a pretty trivial addition.\n","permalink":"/projects/contributions/shields-docker/","tags":["Docker","Rest APIs","JavaScript","node.js","JSON"],"title":"Added Docker Build Status Badge to shields.io"},{"categories":null,"contents":"While adding Structured Data to a client\u0026rsquo;s website I found some example JSON that was invalid. Simple contribution to cleanup the user documentation providing syntactically valid JSON documents.\n","permalink":"/projects/contributions/schema-org/","tags":["JSON"],"title":"Schema.org Structured Data documentation fixes"},{"categories":null,"contents":"BOSH (Bosh Outer SHell) \u0026ldquo;\u0026hellip; is an open source tool for release engineering, deployment, lifecycle management, and monitoring of distributed systems.\u0026rdquo; And it\u0026rsquo;s amazingly powerful. This examples uses BOSH to provision an Alassian vendor app running on JDK along with the support Postgres database and agents to support it. The releases manages the health of services and will automatically provision, start/stop processes across the various services.\n","permalink":"/projects/creations/bosh-agents/","tags":["DevOps","BOSH","Java","Atlassian Ecosystem","monit","python","xml/xslt","bash/shell","REST APIs"],"title":"BOSH release for Bamboo \u0026 Remote Agents"},{"categories":null,"contents":"Multiple plugins used by thousands of teams that provide enhanced functionality of Atlassian’s core products (primarily JIRA and Bamboo) to enrich CI/CD capabilities, DevOps automation, or productivity. Functionality spans user interface, web services and persistence.\n","permalink":"/projects/creations/marketplace/","tags":["Java","Spring","REST APIs","Javascript","Atlassian Developer Ecosystem","Bamboo","JIRA","Bitbucket","Confluence","DevOps"],"title":"Atlassian Marketplace Plugins"},{"categories":null,"contents":"Provides required dependencies and additional utilities to simplify and codify the process of building, testing and delivering Atlassian plugins all the way to the live marketplace. Executes integration/AUT level tests against all stated compatible versions for the productUploads generated artifact to Atlassian marketplaceProvides corresponding metadata indicating version, release notes, and compatibility\n","permalink":"/projects/creations/docker-marketplace/","tags":["Docker","Maven","Java","Python","REST APIs","Bash/Shell"],"title":"Docker image for Bitbucket CI/CD Pipelines  \"shipit\""},{"categories":null,"contents":" This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026quot;HTML\u0026quot;, \u0026quot;JSON\u0026quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026quot;contents\u0026quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026quot;tags\u0026quot;:{{ .Params.tags | jsonify }}{{end}}, \u0026quot;categories\u0026quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026quot;title\u0026quot;, \u0026quot;contents\u0026quot;, \u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot; ]  ","permalink":"/search/","tags":null,"title":"Search Results"}]